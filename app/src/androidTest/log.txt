安卓4.0以上，写到外部存储器，分了内置和外置sd卡
<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
只能申请到写内置的sd卡（不然你以为手机本身哪里有存储器啊？）
http://www.cnblogs.com/jiezzy/archive/2012/07/11/2586639.html

那么问题来了，“内部存储”到底是个什么样的概念！！！
--12.28 0.41


【总结下设计】
AI sensor data {
1. 目前的成果
1）懂得如何获取各种sensor的数据，gps（经纬度，速度）；
2）知道了如何定时取数据；
3）知道了如何写到文件里去！

2. 还差
1）(wifi信息)，（(音量)，【摄像头是否打开（不做了）】；anything else？
2）UI的设计；

3. 一些想法
1）开始界面有一个按钮（start），点击可以开始收集数据（100ms延迟开始，因为人需要准备）；
2）开始收集数据，是一个progressDialog的界面，每收集一次，进度增加一个单位（暂定为收集5s，每0.1s收集一次？）；
3）定时结束，销毁progressDialog，回到主界面，如何将界面动态设置为“选择动作标签”的ListView + 一个按钮？
}

【今天的任务】
1. 设计好两个Intent的UI；
2. 整理好现有的代码；

--12.28 13:07


private String getWifiInfo() {
    WifiManager wifi = (WifiManager) getSystemService(Context.WIFI_SERVICE);
    String status = "WIFI_STATE_UNENABLED";
    if (wifi.getWifiState() == WifiManager.WIFI_STATE_ENABLED)
    {
        status = "WIFI_STATE_ENABLED";
    }

    return status;
}

// 获取媒体音量而已，还有系统音量，铃声等
private int getVolumeInfo() {
    AudioManager audioManager = (AudioManager) getSystemService(Context.AUDIO_SERVICE);
    return audioManager.getStreamVolume(AudioManager.STREAM_MUSIC);
}

/*private void getCameraInfo() {
    int cameraId = 0;
    android.hardware.Camera.CameraInfo info = new android.hardware.Camera.CameraInfo();
    android.hardware.Camera.getCameraInfo(cameraId, info);
}*/


private void save(String text) {
    File file = new File(getExternalFilesDir(null), "hello.txt");
    try {
        OutputStream os = new FileOutputStream(file);
        os.write(text.getBytes());
        os.close();
    } catch (IOException e) {
        e.printStackTrace();
        Log.d("ExternalStorage", "Error writing " + file, e);
    }
}



LocationListener locationListener = new LocationListener() {
    @Override
    public void onStatusChanged(String provider, int status, Bundle extras) {
    }

    @Override
    public void onProviderEnabled(String provider) {
    }

    @Override
    public void onProviderDisabled(String provider) {
    }

    @Override
    public void onLocationChanged(Location location) {
    }
};

private void showLocation(Location location) {
    String currentPosition = "latitude is " + location.getLatitude() + "\n" + "longitude is " + location.getLongitude();
    positionTextView.setText(currentPosition);
}


ArrayAdapter<String> adapter = new ArrayAdapter<String>(MainActivity.this, android.R.layout.simple_expandable_list_item_1, data);
FruitAdapter adapter = new FruitAdapter(MainActivity.this, R.layout.fruit_item, fruitList);
    ListView listView = (ListView)findViewById(R.id.list_view);
    listView.setAdapter(adapter);
    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
        @Override
        public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
            Fruit fruit = fruitList.get(position);
            Toast.makeText(MainActivity.this, fruit.getName(), Toast.LENGTH_SHORT).show();
        }
});




// 测试GPS管理
//positionTextView = (TextView)findViewById(R.id.position_text_view);
//// What is Context?
//locationManager = (LocationManager)getSystemService(Context.LOCATION_SERVICE);
//List<String> providerList = locationManager.getProviders(true);
//if (providerList.contains(LocationManager.GPS_PROVIDER)) {
//provider = LocationManager.GPS_PROVIDER;
//} else if (providerList.contains(LocationManager.NETWORK_PROVIDER)) {
//provider = LocationManager.NETWORK_PROVIDER;
//} else {
//Toast.makeText(this, "No location provider to use", Toast.LENGTH_LONG).show();
//return ;
//}
//
//Location location = locationManager.getLastKnownLocation(provider);
//if (location != null) {
//showLocation(location);
//}
//locationManager.requestLocationUpdates(provider, 5000, 1, locationListener);



if (locationManager != null) {
    locationManager.removeUpdates(locationListener);
}


<Button
    android:id="@+id/redo_button"
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:layout_alignParentBottom="true"
    android:gravity="center"
    android:text="重新收集数据" />

<Button
    android:id="@+id/finish_button"
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:layout_alignParentBottom="true"
    android:layout_toRightOf="@+id/redo_button"
    android:layout_centerVertical="true"
    android:text="记录数据并返回" />



文件存储的好文档：
http://www.dengzhr.com/others/mobile/742?utm_source=tuicool&utm_medium=referral


传感器缺失。。。根据getDefaultSensor的返回值是否为空就可以确定了！
GPS感觉没必要。。。
wifi和音量，目测只需要测一次就好了，属于这个序列的一个属性，传感器的值才是需要多次测的


增加预测动作界面
--2015.12.29

